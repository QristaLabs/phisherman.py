{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Source Code : github.com/QristaLabs/phisherman.py PyPi : pypi.org/project/phisherman.py Phisherman.py is an async API wrapper made in Python for Phisherman.gg which is a centralised database and scam links and is mainly designed for Discord bots to check URLs for any phishing links","title":"Home"},{"location":"code-reference/","text":"Code Reference app Application Application class for the API Wrapper Attributes: Name Type Description token str API Token from phisherman.gg base_url str Base URL to access the API session aiohttp.ClientSession For creating client session and to make requests __init__ ( self , token , version = 1 ) special Construct an application Parameters: Name Type Description Default token str Phisherman.gg API Token required version Optional[int] Optional Argument for the API Version, Default to 1 for now 1 check_domain ( self , domain ) async Checks a domain, Returns True if its suspicious else False NOTE: Even if it returns false doesn't mean the domain isn't suspicious it's just that the domain isn't registered in the API's Database or you might have entered incorrect domain Parameters: Name Type Description Default domain str Domain you want to look for (Don't include 'https://') required fetch_info ( self , domain ) async Fetch's Information for a domain Parameters: Name Type Description Default domain str Domain you want to look for (Don't include 'https://') required report_phish ( self , domain , guild ) async Report a site for phishing Parameters: Name Type Description Default domain str Domain you want to look for (Don't include 'https://') required guild Optional[int] Discord Guild ID you found the site link in required","title":"Application"},{"location":"code-reference/#code-reference","text":"","title":"Code Reference"},{"location":"code-reference/#phisherman.app","text":"","title":"app"},{"location":"code-reference/#phisherman.app.Application","text":"Application class for the API Wrapper Attributes: Name Type Description token str API Token from phisherman.gg base_url str Base URL to access the API session aiohttp.ClientSession For creating client session and to make requests","title":"Application"},{"location":"code-reference/#phisherman.app.Application.__init__","text":"Construct an application Parameters: Name Type Description Default token str Phisherman.gg API Token required version Optional[int] Optional Argument for the API Version, Default to 1 for now 1","title":"__init__()"},{"location":"code-reference/#phisherman.app.Application.check_domain","text":"Checks a domain, Returns True if its suspicious else False NOTE: Even if it returns false doesn't mean the domain isn't suspicious it's just that the domain isn't registered in the API's Database or you might have entered incorrect domain Parameters: Name Type Description Default domain str Domain you want to look for (Don't include 'https://') required","title":"check_domain()"},{"location":"code-reference/#phisherman.app.Application.fetch_info","text":"Fetch's Information for a domain Parameters: Name Type Description Default domain str Domain you want to look for (Don't include 'https://') required","title":"fetch_info()"},{"location":"code-reference/#phisherman.app.Application.report_phish","text":"Report a site for phishing Parameters: Name Type Description Default domain str Domain you want to look for (Don't include 'https://') required guild Optional[int] Discord Guild ID you found the site link in required","title":"report_phish()"},{"location":"installation/","text":"Installation To install phisherman.py, run the following command from the command line: pip install phisherman.py","title":"Installation"},{"location":"installation/#installation","text":"To install phisherman.py, run the following command from the command line: pip install phisherman.py","title":"Installation"}]}